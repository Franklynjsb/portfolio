---
import Angularicon from "./icons/Angularicon.astro";
import LinkIcon from "./icons/LinkIcon.astro";
import CSSicon from "./icons/CSSicon.astro";
import HTMLicon from "./icons/HTMLicon.astro";
import Javascripticon from "./icons/Javascripticon.astro";
import NextJSicon from "./icons/NextJSicon.astro";
import Dockericon from "./icons/Dockericon.astro";
import GitHub from "./icons/GitHub.astro";
import MySQLicon from "./icons/MySQLicon.astro";
import Javaicon from "./icons/Javaicon.astro";
import Typescripticon from "./icons/Typescripticon.astro";
import LinkButton from "./LinkButton.astro";
import BadgeRed from "./BadgeRed.astro";
import Tailwindicon from "./icons/Tailwindicon.astro";


//Create a tag list where its possible to select multiple items for projects
const TAGS = {
    NEXT: {
        name: "NextJS",
        class: "bg-black",
        icon: NextJSicon,
    },
    ANGULAR: {
        name: "Angular",
        class: "bg-black",
        icon: Angularicon,
    },
    JAVASCRIPT: {
        name: "JavaScript",
        class: "bg-black",
        icon: Javascripticon,
    },
    HTML: {
        name: "HTML",
        class: "bg-black",
        icon: HTMLicon,
    },
    CSS: {
        name: "CSS",
        class: "bg-black",
        icon: CSSicon,
    },
    DOCKER: {
        name: "Docker",
        class: "bg-black",
        icon: Dockericon,
    },
    GITHUB: {
        name: "Git-Hub",
        class: "bg-black",
        icon: GitHub,
    },
    MYSQL: {
        name: "Mysql",
        class: "bg-black",
        icon: MySQLicon,
    },
    JAVA: {
        name: "Java",
        class: "bg-black",
        icon: Javaicon,
    },
    TYPESCRIPT: {
        name: "Typescript",
        class: "bg-black",
        icon: Typescripticon,
    },
    TAILWIND:{
        name: "Tailwind",
        class: "bg-black",
        icon: Tailwindicon,
    }
};

//Created list of projects for exposing them On the Layout
const PROJECTS = [
    {
        title: "MediLatam",
        descriptionEN:
            "MediLatam is an application currently in development. Within the NoCountry simulation, we are creating this Telemedicine application, where I act as the director of the BackEnd development team. It is being developed using NodeJS with a BackEnd focused on Java and PostgreSQL with Docker packaging.",
        status: "live",
        link: null,
        github: "https://github.com/No-Country/c17-49-n-java",
        image: "https://firebasestorage.googleapis.com/v0/b/fjqfrontend.appspot.com/o/imagen%2F683shots_so.jpg?alt=media&token=6d30f005-b1cb-46ae-a305-d5dffeb3e52d",
        tags: [TAGS.NEXT, TAGS.JAVA, TAGS.DOCKER, TAGS.TAILWIND],
    },
    {
        title: "NoteAPP",
        descriptionES:
            "Aplicación de creación, eliminación, edición y guardado de notas, creado con EJS, Javascript, HTML y CSS.Con la utilizacion de MeiliSearch, Appwrite y NodeJS",
        
        descriptionEN:
            "Application for creating, deleting, editing, and saving notes, created with EJS, JavaScript, HTML, and CSS. Utilizing MeiliSearch, Appwrite, and Node.js.",
        status: null,
        link: null,
        github: "https://github.com/Franklynjsb/NoteAPP",
        image: "https://firebasestorage.googleapis.com/v0/b/fjqfrontend.appspot.com/o/imagen%2FNoteAPP.jpg?alt=media&token=39552664-1adf-4697-92a7-4f3233f014ef",
        tags: [TAGS.NEXT, TAGS.ANGULAR, TAGS.JAVASCRIPT, TAGS.HTML],
    },
    {
        title: "Encriptator",
        description:
            "Aplicación desarrollada donde puede encriptar un texto o desencriptarlo. Este mismo proyecto fue realizado con tecnologías como Javascript, CSS y HTML.",
        descriptionEN: 
            "Developed application where you can encrypt or decrypt text. This project was implemented using technologies such as JavaScript, CSS, and HTML.",
        status: null,
        link: "https://encriptator.onrender.com",
        github: "https://github.com/Franklynjsb/FJQ-AluraChallenge1",
        image: "https://firebasestorage.googleapis.com/v0/b/fjqfrontend.appspot.com/o/imagen%2FEncriptator.jpg?alt=media&token=c924932d-54b4-4586-bb00-8c85a1a55b4c",
        tags: [TAGS.HTML, TAGS.JAVASCRIPT, TAGS.CSS],
    },
    {
        title: "Portofolio (Back End)",
        description:
            "Para el desarrollo del backend, se optó por Java, un lenguaje confiable y escalable que facilita la gestión eficiente del servidor. Java se encarga de manejar las solicitudes del cliente y asegura la estabilidad del sistema. La base de datos, implementada con MySQL, garantiza un almacenamiento seguro y eficiente de la información, respaldando la integridad y la disponibilidad de los datos. En conjunto, el frontend y el backend se integran para crear un portafolio interactivo que destaca tanto en diseño como en funcionalidad.",
        descriptionEN: "For the backend development, Java was chosen, a reliable and scalable language that facilitates efficient server management. Java handles client requests and ensures system stability. The database, implemented with MySQL, ensures secure and efficient storage of information, supporting data integrity and availability. Together, the frontend and backend integrate to create an interactive portfolio that excels in both design and functionality.",
        status: "dead",
        link: "https://fjqfrontend.web.app",
        github: "https://github.com/Franklynjsb/proyectoBackEnd",
        image: "https://firebasestorage.googleapis.com/v0/b/fjqfrontend.appspot.com/o/imagen%2FPortofolio.jpg?alt=media&token=fac7bad5-d3e0-4ba8-a348-b9a528dd4aa6",
        tags: [TAGS.JAVASCRIPT, TAGS.DOCKER, TAGS.MYSQL, TAGS.JAVA, TAGS.TYPESCRIPT],
    },{
        title: "Portofolio (Front End)",
        description:
            "El componente frontal de este proyecto se ha construido con Angular, aprovechando su robusto conjunto de herramientas para crear un portafolio interactivo y atractivo. El uso de JavaScript y Typescript ha permitido desarrollar una lógica del cliente dinámica y eficiente, proporcionando una experiencia de usuario fluida. La interfaz de usuario resultante es moderna y agradable, brindando una plataforma interactiva para presentar proyectos y habilidades.",
        descriptionEN: 
            "The front-end component of this project has been built with Angular, leveraging its robust set of tools to create an interactive and engaging portfolio. The use of JavaScript and TypeScript has allowed for the development of dynamic and efficient client-side logic, providing a smooth user experience. The resulting user interface is modern and pleasant, offering an interactive platform to showcase projects and skills.",
        status: "dead",
        link: "https://fjqfrontend.web.app",
        github: "https://github.com/Franklynjsb/proyectoFrontEnd",
        image: "https://firebasestorage.googleapis.com/v0/b/fjqfrontend.appspot.com/o/imagen%2FPortofolio.jpg?alt=media&token=fac7bad5-d3e0-4ba8-a348-b9a528dd4aa6",
        tags: [TAGS.JAVASCRIPT, TAGS.CSS, TAGS.ANGULAR, TAGS.TYPESCRIPT],
    },
    {
        title: "Discord-Bot",
        description:
            "Readaptación de Bot para Discord para que el mismo puediese tomar links de Youtube y reproducirlos mediante comandos en los canales de Discord. Actualmente este mismo se encuentra fuera de servicio pero puede acceder a los repositorios del mismo.",
        descriptionEN: 
            "Adaptation of a Discord bot to enable it to take YouTube links and play them through commands in Discord channels. Currently, this bot is out of service, but you can access its repositories.",
        status: "dead",
        link: null,
        github: "https://github.com/Franklynjsb/discord-bot",
        image: "https://firebasestorage.googleapis.com/v0/b/fjqfrontend.appspot.com/o/imagen%2FMukaProyect.jpg?alt=media&token=8646af47-e781-4dac-884e-6271df19fced",
        tags: [TAGS.JAVASCRIPT, TAGS.DOCKER],
    } /* ,
    {
        title: "NoteAPP",
        description:
            "Aplicación de creación, eliminación, edición y guardado de notas, creado con EJS, Javascript, HTML y CSS.Con la utilizacion de MeiliSearch, Appwrite y NodeJS",
        link: "",
        github: "https://github.com/Franklynjsb/NoteAPP",
        image: "../src/assets/NoteApp.jpg",
        tags: [TAGS.NEXT, TAGS.ANGULAR, TAGS.JAVASCRIPT, TAGS.HTML],
    }, */,
];
---
<section class="flex flex-col gap-y-8">
{
    //Data is processed looking for each item in the list of projects. Then the data is returned as needed.
    PROJECTS.map(({ link, image, github, status, title, descriptionEN, tags }) => (
        <article class="mt-4">
            <h3 class="text-2xl font-semibold mt-6" style="color:#A9F754">
                {title}
                {status && (
                    <BadgeRed>
                        #dead
                    </BadgeRed>
                )}
            </h3>
            
            <p class="text-lg mb-1 text-pretty">
                {descriptionEN}
            </p>
            <ul class="flex gap-x-4 flex-row">
                {tags.map((tag) => (
                    <li>
                        <tag.icon class="size-4 md:size-6" />
                    </li>
                ))}
            </ul>
            <a title="Image from proyect">
                <img
                    loading="lazy"
                    class="rounded shadow-2xl shadow-[#310a65] mt-4 aspect-video"
                    src={image}
                    alt={`Screenshot project ${image}`}
                    style="height:400px"
                />
            </a>
            <footer class="flex gap-x-4 items-end justify-start mt-4">
                {github && (
                    <LinkButton href={github} target="_blank">
					    <GitHub class="size-5 md:size-6" alt="GitHub icon" />
                        View source code...
                    </LinkButton>
                )}
                {link && (
                    <LinkButton href={link}>
                        <LinkIcon class="size-5 md:size-6" alt="Linked page icon" ></LinkIcon>
                        Go to the website.
                    </LinkButton>  
                )}
            </footer>
        </article>
    ))
}
</section>